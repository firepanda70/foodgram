# Generated by Django 2.2.19 on 2022-01-09 01:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import recipes.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название ингредиента', max_length=32, unique=True, verbose_name='Название')),
                ('measurement_unit', models.CharField(choices=[('KG', 'кг.'), ('G', 'г.'), ('ML', 'мл.'), ('L', 'л.'), ('AN', 'по вкусу')], help_text='Единица измерения игредиента', max_length=3, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='IngredientRecipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(help_text='Количество игредиента', validators=[recipes.validators.NotZeroValidator()], verbose_name='Количество')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.Ingredient')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Название рецепта', max_length=64, verbose_name='Название')),
                ('image', models.ImageField(help_text='Изображения блюда', upload_to='images/recipes', verbose_name='Изображение')),
                ('description', models.TextField(help_text='Описание рецепта', verbose_name='Текст')),
                ('time', models.IntegerField(help_text='Время приготовления в минутах', validators=[recipes.validators.NotZeroValidator()], verbose_name='Время приготовления')),
                ('author', models.ForeignKey(help_text='Автор рецепта', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('ingredients', models.ManyToManyField(help_text='Список ингредиентов', through='recipes.IngredientRecipe', to='recipes.Ingredient', verbose_name='Ингредиенты')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Категория рецепта', max_length=32, unique=True, verbose_name='Тэг')),
                ('color', models.CharField(help_text='Цветовой HEX-код (например, #49B64E)', max_length=7, unique=True, validators=[recipes.validators.HEXCodeValidator()], verbose_name='HEX-код')),
                ('slug', models.SlugField(help_text='Адрес тэга', max_length=32, unique=True, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TagRecipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.Recipe')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Корзины пользователей', on_delete=django.db.models.deletion.CASCADE, related_name='users_carts', to='recipes.Recipe', verbose_name='Рецепт в списке покупок')),
                ('user', models.ForeignKey(help_text='Владелец списка покупок', on_delete=django.db.models.deletion.CASCADE, related_name='shopping_list', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Элемент списка покупок',
                'verbose_name_plural': 'Элементы списка покупок',
                'ordering': ('recipe',),
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(help_text='Список тэгов', through='recipes.TagRecipe', to='recipes.Tag', verbose_name='Тэги'),
        ),
        migrations.AddField(
            model_name='ingredientrecipe',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.Recipe'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Избранные рецепты', on_delete=django.db.models.deletion.CASCADE, related_name='user', to='recipes.Recipe', verbose_name='Избранные рецепты')),
                ('user', models.ForeignKey(help_text='Владелец списка избранного', on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Избранный',
                'verbose_name_plural': 'Избранные',
                'ordering': ('recipe',),
                'unique_together': {('user', 'recipe')},
            },
        ),
    ]
